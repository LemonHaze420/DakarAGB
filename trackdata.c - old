#include "TrackData.h"

TrackTile TheTrack[] =
{
	{0, 6372, 521, 6372, 501, 6388, 514, 6374, 500},
	{1, 6388, 514, 6374, 500, 6395, 507, 6381, 493},
	{2, 6395, 507, 6381, 493, 6400, 504, 6392, 485},
	{3, 6400, 504, 6392, 485, 6406, 503, 6406, 483},
	{4, 6406, 503, 6406, 483, 6419, 500, 6412, 481},
	{5, 6419, 500, 6412, 481, 6429, 496, 6421, 478},
	{5, 6429, 496, 6421, 478, 6438, 492, 6430, 474},
	{5, 6438, 492, 6430, 474, 6447, 488, 6439, 470},
	{5, 6447, 488, 6439, 470, 6456, 485, 6449, 466},
	{5, 6456, 485, 6449, 466, 6466, 481, 6458, 462},
	{5, 6466, 481, 6458, 462, 6475, 477, 6467, 458},
	{5, 6475, 477, 6467, 458, 6484, 473, 6476, 455},
	{5, 6484, 473, 6476, 455, 6493, 469, 6486, 451},
	{5, 6493, 469, 6486, 451, 6503, 465, 6495, 447},
	{5, 6503, 465, 6495, 447, 6512, 462, 6504, 443},
	{5, 6512, 462, 6504, 443, 6521, 458, 6513, 439},
	{5, 6521, 458, 6513, 439, 6530, 454, 6523, 435},
	{5, 6530, 454, 6523, 435, 6539, 450, 6532, 432},
	{5, 6539, 450, 6532, 432, 6549, 446, 6541, 428},
	{5, 6549, 446, 6541, 428, 6558, 442, 6550, 424},
	{5, 6558, 442, 6550, 424, 6567, 439, 6560, 420},
	{5, 6567, 439, 6560, 420, 6576, 435, 6569, 416},
	{5, 6576, 435, 6569, 416, 6586, 431, 6578, 413},
	{5, 6586, 431, 6578, 413, 6595, 427, 6587, 409},
	{5, 6595, 427, 6587, 409, 6604, 423, 6596, 405},
	{5, 6604, 423, 6596, 405, 6613, 420, 6606, 401},
	{5, 6613, 420, 6606, 401, 6623, 416, 6615, 397},
	{5, 6623, 416, 6615, 397, 6632, 412, 6624, 393},
	{5, 6632, 412, 6624, 393, 6641, 408, 6633, 390},
	{6, 6641, 408, 6633, 390, 6653, 400, 6638, 386},
	{2, 6653, 400, 6638, 386, 6658, 397, 6650, 379},
	{6, 6658, 397, 6650, 379, 6669, 389, 6655, 375},
	{2, 6669, 389, 6655, 375, 6674, 386, 6666, 367},
	{6, 6674, 386, 6666, 367, 6686, 378, 6671, 364},
	{2, 6686, 378, 6671, 364, 6691, 375, 6683, 356},
	{6, 6691, 375, 6683, 356, 6702, 367, 6688, 353},
	{2, 6702, 367, 6688, 353, 6707, 364, 6700, 345},
	{6, 6707, 364, 6700, 345, 6719, 356, 6705, 342},
	{2, 6719, 356, 6705, 342, 6724, 353, 6716, 334},
	{6, 6724, 353, 6716, 334, 6735, 345, 6721, 331},
	{2, 6735, 345, 6721, 331, 6740, 342, 6733, 323},
	{6, 6740, 342, 6733, 323, 6752, 334, 6738, 320},
	{2, 6752, 334, 6738, 320, 6757, 331, 6749, 312},
	{6, 6757, 331, 6749, 312, 6768, 323, 6754, 309},
	{2, 6768, 323, 6754, 309, 6773, 320, 6766, 301},
	{6, 6773, 320, 6766, 301, 6785, 312, 6771, 298},
	{2, 6785, 312, 6771, 298, 6790, 309, 6782, 290},
	{6, 6790, 309, 6782, 290, 6801, 301, 6787, 287},
	{2, 6801, 301, 6787, 287, 6806, 298, 6799, 279},
	{6, 6806, 298, 6799, 279, 6818, 290, 6804, 276},
	{2, 6818, 290, 6804, 276, 6823, 287, 6815, 268},
	{6, 6823, 287, 6815, 268, 6834, 279, 6820, 265},
	{2, 6834, 279, 6820, 265, 6839, 276, 6832, 257},
	{6, 6839, 276, 6832, 257, 6851, 268, 6837, 254},
	{2, 6851, 268, 6837, 254, 6856, 265, 6848, 246},
	{6, 6856, 265, 6848, 246, 6867, 257, 6853, 243},
	{2, 6867, 257, 6853, 243, 6872, 253, 6865, 235},
	{6, 6872, 253, 6865, 235, 6884, 246, 6870, 232},
	{2, 6884, 246, 6870, 232, 6889, 242, 6881, 224},
	{6, 6889, 242, 6881, 224, 6900, 235, 6886, 221},
	{2, 6900, 235, 6886, 221, 6905, 231, 6898, 213},
	{6, 6905, 231, 6898, 213, 6917, 224, 6903, 210},
	{2, 6917, 224, 6903, 210, 6922, 220, 6914, 202},
	{6, 6922, 220, 6914, 202, 6933, 213, 6919, 199},
	{2, 6933, 213, 6919, 199, 6938, 209, 6931, 191},
	{5, 6938, 209, 6931, 191, 6948, 205, 6940, 187},
	{5, 6948, 205, 6940, 187, 6957, 202, 6949, 183},
	{5, 6957, 202, 6949, 183, 6966, 198, 6959, 179},
	{3, 6966, 198, 6959, 179, 6972, 197, 6972, 177},
	{7, 6972, 197, 6972, 177, 6982, 197, 6982, 177},
	{7, 6982, 197, 6982, 177, 6992, 197, 6992, 177},
	{4, 6992, 197, 6992, 177, 7006, 194, 6998, 175},
	{5, 7006, 194, 6998, 175, 7015, 190, 7007, 172},
	{5, 7015, 190, 7007, 172, 7024, 186, 7017, 168},
	{5, 7024, 186, 7017, 168, 7033, 182, 7026, 164},
	{5, 7033, 182, 7026, 164, 7043, 179, 7035, 160},
	{5, 7043, 179, 7035, 160, 7052, 175, 7044, 156},
	{6, 7052, 175, 7044, 156, 7063, 167, 7049, 153},
	{2, 7063, 167, 7049, 153, 7068, 164, 7061, 145},
	{6, 7068, 164, 7061, 145, 7080, 156, 7066, 142},
	{8, 7080, 156, 7066, 142, 7088, 145, 7069, 137},
	{9, 7088, 145, 7069, 137, 7091, 140, 7077, 125},
	{8, 7091, 140, 7077, 125, 7099, 128, 7080, 120},
	{9, 7099, 128, 7080, 120, 7102, 123, 7088, 109},
	{8, 7102, 123, 7088, 109, 7110, 112, 7091, 104},
	{9, 7110, 112, 7091, 104, 7113, 107, 7099, 92},
	{8, 7113, 107, 7099, 92, 7121, 95, 7102, 87},
	{9, 7121, 95, 7102, 87, 7124, 90, 7110, 76},
	{8, 7124, 90, 7110, 76, 7132, 78, 7113, 71},
	{9, 7132, 78, 7113, 71, 7135, 73, 7121, 59},
	{8, 7135, 73, 7121, 59, 7143, 62, 7124, 54},
	{9, 7143, 62, 7124, 54, 7146, 57, 7132, 43},
	{8, 7146, 57, 7132, 43, 7154, 45, 7135, 38},
	{9, 7154, 45, 7135, 38, 7157, 40, 7143, 26},
	{8, 7157, 40, 7143, 26, 7165, 29, 7146, 21},
	{9, 7165, 29, 7146, 21, 7168, 24, 7154, 10},
	{8, 7168, 24, 7154, 10, 7176, 12, 7157, 5},
	{10, 7176, 12, 7157, 5, 7180, 3, 7161, -3},
	{9, 7180, 3, 7161, -3, 7183, -1, 7169, -15},
	{8, 7183, -1, 7169, -15, 7191, -12, 7172, -20},
	{9, 7191, -12, 7172, -20, 7194, -17, 7180, -32},
	{8, 7194, -17, 7180, -32, 7202, -29, 7183, -37},
	{9, 7202, -29, 7183, -37, 7205, -34, 7191, -48},
	{1, 7205, -34, 7191, -48, 7212, -41, 7198, -55},
	{2, 7212, -41, 7198, -55, 7217, -44, 7210, -63},
};

BOOL	InitTrackData(HUNK track, INT trackNum)
{
	INT i, j;
	for(i = 0; i < 8; i++)
	{
		for(j = 0; j < 1; j++) //have no track data at the sides yet
		{
			VSetVec(track.tris[i][3].v1, TheTrack[i].x1, TheTrack[i].y1, 0); //no z values as yet
			VSetVec(track.tris[i][3].v2, TheTrack[i].x2, TheTrack[i].y2, 0);
			VSetVec(track.tris[i][3].v3, TheTrack[i].x4, TheTrack[i].y4, 0);

			VSetVec(track.tris[i][4].v1, TheTrack[i].x1, TheTrack[i].y1, 0); //no z values as yet
			VSetVec(track.tris[i][4].v2, TheTrack[i].x4, TheTrack[i].y4, 0);
			VSetVec(track.tris[i][4].v3, TheTrack[i].x3, TheTrack[i].y3, 0);
		}
	}
	
	for(i = 0; i < 30; i++)
	{
	
		Vequ(viewableTrack[i], track.tris[i / 6][(i % 6)+2].v1);
		
	}

	return TRUE;
}

void	ProcessTrackViewer(VECTOR carMove, fp14 carOrientation, HUNK track)
{
	//if they haven't moved more than 10 meters then return
	if( fp2int( Vlength(carMove)) < 10) 
		return;

	//can't do any of this yet... no sides to the track
}

